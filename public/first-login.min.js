webpackJsonp([13],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _FirstLogin = __webpack_require__(215);

	var _FirstLogin2 = _interopRequireDefault(_FirstLogin);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(127);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_reactDom2.default.render(_react2.default.createElement(_FirstLogin2.default, null), document.getElementById('framework'));

/***/ },

/***/ 215:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	__webpack_require__(224);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _antd = __webpack_require__(3);

	var _common = __webpack_require__(118);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var createForm = _antd.Form.create;
	var FormItem = _antd.Form.Item;
	function noop() {
	    return false;
	}

	var FirstLogin = function (_React$Component) {
	    _inherits(FirstLogin, _React$Component);

	    function FirstLogin() {
	        var _Object$getPrototypeO;

	        var _temp, _this, _ret;

	        _classCallCheck(this, FirstLogin);

	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }

	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(FirstLogin)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	            loading: false
	        }, _this.handleSubmit = function (e) {
	            if (_this.state.loading) {
	                return;
	            }

	            e.preventDefault();
	            _this.props.form.validateFields(function (errors, values) {
	                if (!!errors) {
	                    return false;
	                }
	                _this.setState({
	                    loading: true
	                });
	                _common.Request.put('/first_login').send(values).end(function (err, res) {
	                    _this.setState({
	                        loading: false
	                    });
	                    if (err || !res.ok) {
	                        _antd.message.error(res.body.message);
	                    } else {
	                        var refer = res.body.refer || '/';
	                        var menus = res.body.menus || [];
	                        var currentLoginUser = res.body.user;
	                        _common.Storage.session.set('currentLoginUser', currentLoginUser);
	                        _common.Storage.session.set('menus', menus);
	                        location.href = refer;
	                    }
	                });
	            });
	        }, _this.checkPass = function (rule, value, callback) {
	            var validateFields = _this.props.form.validateFields;

	            if (value) {
	                validateFields(['rePass'], { force: true });
	            }
	            callback();
	        }, _this.checkRePass = function (rule, value, callback) {
	            var getFieldValue = _this.props.form.getFieldValue;

	            if (value && value !== getFieldValue('pass')) {
	                callback('两次输入密码不一致！');
	            } else {
	                callback();
	            }
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	    }

	    _createClass(FirstLogin, [{
	        key: 'render',
	        value: function render() {
	            var getFieldProps = this.props.form.getFieldProps;

	            var passwdProps = getFieldProps('pass', {
	                rules: [{ required: true, whitespace: true, message: '请填写密码' }, { validator: this.checkPass }]
	            });
	            var rePasswdProps = getFieldProps('rePass', {
	                rules: [{
	                    required: true,
	                    whitespace: true,
	                    message: '请再次输入密码'
	                }, {
	                    validator: this.checkRePass
	                }]
	            });
	            var formItemLayout = {
	                labelCol: { span: 5 },
	                wrapperCol: { span: 16 }
	            };
	            return _react2.default.createElement(
	                'div',
	                { className: 'first-login-box' },
	                _react2.default.createElement(
	                    'h1',
	                    { className: 'title' },
	                    '首次登录，请修改您的密码'
	                ),
	                _react2.default.createElement(
	                    _antd.Form,
	                    { horizontal: true, form: this.props.form },
	                    _react2.default.createElement(
	                        FormItem,
	                        _extends({}, formItemLayout, {
	                            label: '密码：'
	                        }),
	                        _react2.default.createElement(_antd.Input, _extends({}, passwdProps, {
	                            type: 'password',
	                            autoComplete: 'off',
	                            onContextMenu: noop,
	                            onPaste: noop,
	                            onCopy: noop,
	                            onCut: noop
	                        }))
	                    ),
	                    _react2.default.createElement(
	                        FormItem,
	                        _extends({}, formItemLayout, {
	                            label: '确认密码：'
	                        }),
	                        _react2.default.createElement(_antd.Input, _extends({}, rePasswdProps, {
	                            type: 'password',
	                            autoComplete: 'off',
	                            onContextMenu: noop,
	                            onPaste: noop,
	                            onCopy: noop,
	                            onCut: noop
	                        }))
	                    ),
	                    _react2.default.createElement(
	                        FormItem,
	                        { wrapperCol: { span: 16, offset: 5 } },
	                        _react2.default.createElement(
	                            _antd.Button,
	                            {
	                                style: { width: '100%' },
	                                type: 'primary',
	                                loading: this.state.loading,
	                                onClick: this.handleSubmit
	                            },
	                            '确认'
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return FirstLogin;
	}(_react2.default.Component);

	exports.default = createForm()(FirstLogin);
	module.exports = exports['default'];

/***/ },

/***/ 224:
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }

});