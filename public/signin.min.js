webpackJsonp([12],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _SignIn = __webpack_require__(216);

	var _SignIn2 = _interopRequireDefault(_SignIn);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(127);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	_reactDom2.default.render(_react2.default.createElement(_SignIn2.default, null), document.getElementById('framework'));

/***/ },

/***/ 216:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	__webpack_require__(225);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _common = __webpack_require__(118);

	var _antd = __webpack_require__(3);

	var _bg = __webpack_require__(284);

	var _bg2 = _interopRequireDefault(_bg);

	var _bg3 = __webpack_require__(285);

	var _bg4 = _interopRequireDefault(_bg3);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var createForm = _antd.Form.create;
	var FormItem = _antd.Form.Item;
	function noop() {
	    return false;
	}

	var SignIn = function (_React$Component) {
	    _inherits(SignIn, _React$Component);

	    function SignIn() {
	        var _Object$getPrototypeO;

	        var _temp, _this, _ret;

	        _classCallCheck(this, SignIn);

	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }

	        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(SignIn)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.state = {
	            loading: false,
	            loaded: false
	        }, _this.handleSubmit = function (e) {
	            if (_this.state.loading) {
	                return;
	            }

	            e.preventDefault();
	            _this.props.form.validateFields(function (errors, values) {
	                if (!!errors) {
	                    return _antd.message.error('用户名或密码错误');
	                }
	                _this.setState({
	                    loading: true
	                });
	                _common.Request.post('/signin').send(values).end(function (err, res) {
	                    _this.setState({
	                        loading: false
	                    });
	                    if (err || !res.ok) {
	                        _antd.message.error(res.body.message);
	                    } else {
	                        var refer = res.body.refer || '/';
	                        var menus = res.body.menus || [];
	                        var currentLoginUser = res.body.user;
	                        if (currentLoginUser.is_first_login) {
	                            location.href = '/first_login';
	                        } else {
	                            _common.Storage.session.set('currentLoginUser', currentLoginUser);
	                            _common.Storage.session.set('menus', menus);
	                            location.href = refer;
	                        }
	                    }
	                });
	            });
	        }, _this.handleKeyDown = function (e) {
	            if (e.key === 'Enter') {
	                _this.handleSubmit(e);
	            }
	        }, _temp), _possibleConstructorReturn(_this, _ret);
	    }

	    _createClass(SignIn, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            var _this2 = this;

	            setTimeout(function () {
	                _this2.setState({
	                    loaded: true
	                });
	            }, 500);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var getFieldProps = this.props.form.getFieldProps;

	            var nameProps = getFieldProps('name', {
	                initialValue: '',
	                rules: [{ required: true, message: '请填写用户名' }]
	            });
	            var passwdProps = getFieldProps('pass', {
	                initialValue: '',
	                rules: [{ required: true, whitespace: true, message: '请填写密码' }]
	            });
	            var formItemLayout = {
	                labelCol: { span: 5 },
	                wrapperCol: { span: 16 }
	            };
	            return _react2.default.createElement(
	                'div',
	                { className: 'login-wrap', style: { backgroundImage: 'url(' + _bg2.default + ')' } },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'img-box ' + (this.state.loaded ? 'loaded' : '') },
	                    _react2.default.createElement('img', { src: _bg4.default, alt: 'img' }),
	                    _react2.default.createElement(
	                        'lable',
	                        { className: 'circle-label small yellow position1' },
	                        '监控'
	                    ),
	                    _react2.default.createElement(
	                        'lable',
	                        { className: 'circle-label large blue position2' },
	                        '智能'
	                    ),
	                    _react2.default.createElement(
	                        'lable',
	                        { className: 'circle-label large red position3' },
	                        '巡检'
	                    ),
	                    _react2.default.createElement(
	                        'lable',
	                        { className: 'circle-label large purple position4' },
	                        '安全'
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'massage position2' },
	                        '智能方便',
	                        _react2.default.createElement('div', { className: 'line' })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'massage position3' },
	                        '快速巡检',
	                        _react2.default.createElement('div', { className: 'line' })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'massage position4' },
	                        '安全可靠的技术支持',
	                        _react2.default.createElement('div', { className: 'line' })
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'login-box' },
	                    _react2.default.createElement(
	                        'h1',
	                        { className: 'login-title' },
	                        '用户登录'
	                    ),
	                    _react2.default.createElement(
	                        _antd.Form,
	                        { horizontal: true, form: this.props.form },
	                        _react2.default.createElement(
	                            FormItem,
	                            _extends({}, formItemLayout, {
	                                label: '用户名：'
	                            }),
	                            _react2.default.createElement(_antd.Input, _extends({}, nameProps, {
	                                onKeyDown: this.handleKeyDown,
	                                placeholder: '请输入登录名'
	                            }))
	                        ),
	                        _react2.default.createElement(
	                            FormItem,
	                            _extends({}, formItemLayout, {
	                                label: '密码：'
	                            }),
	                            _react2.default.createElement(_antd.Input, _extends({}, passwdProps, {
	                                placeholder: '请输入密码',
	                                type: 'password',
	                                autoComplete: 'off',
	                                onContextMenu: noop,
	                                onPaste: noop,
	                                onCopy: noop,
	                                onCut: noop,
	                                onKeyDown: this.handleKeyDown
	                            }))
	                        ),
	                        _react2.default.createElement(
	                            FormItem,
	                            { wrapperCol: { span: 16, offset: 5 } },
	                            _react2.default.createElement(
	                                _antd.Button,
	                                {
	                                    style: { width: '100%' },
	                                    type: 'primary',
	                                    loading: this.state.loading,
	                                    onClick: this.handleSubmit
	                                },
	                                '登录'
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return SignIn;
	}(_react2.default.Component);

	exports.default = createForm()(SignIn);
	module.exports = exports['default'];

/***/ },

/***/ 225:
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },

/***/ 284:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "bg-4ecbbc5.jpg";

/***/ },

/***/ 285:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "bg4-df38d83.png";

/***/ }

});